#Descriptive analysis


#Plotting the graphs

par(mfcol = c (3,3))

plot(Database_thesisV2$DATE, Database_thesisV2$`BTC_price(t)` , type = "l", main = "Bitcoin price", xlab ="Date", ylab = "Bitcoin price", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$Miner_rewards , type = "l", main = "Miner rewards", xlab ="Date", ylab = "Miner rewards", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$Trans_vol , type = "l", main = "Transaction volume", xlab ="Date", ylab = "Transaction volume", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$Hash_rate , type = "l", main = "Hash rate", xlab ="Date", ylab = "Hash rate", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$Trans_fees , type = "l", main = "Transaction fees", xlab ="Date", ylab = "Transaction fees", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$BTC_addresses , type = "l", main = "Bitcoin addresses", xlab ="Date", ylab = "Bitcoin addresses", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$BTC_supply , type = "l", main = "Bitcoin supply", xlab ="Date", ylab = "Bitcoin supply", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$Price_volatility , type = "l", main = "Price volatility", xlab ="Date", ylab = "Price volatility", col = "blue")
plot(Database_thesisV2$DATE, Database_thesisV2$Google_interest , type = "l", main = "Google interest", xlab ="Date", ylab = "Google interest", col = "blue")


plot(Database_thesisV2$DATE, Database_thesisV2$Wiki_search , type = "l", main = "Wikipedia searches", xlab ="Date", ylab = "Wikipedia searches", col = "blue")


#Plotting the class distribution of the Bitcoin price direction (t+1)
par(mfcol = c (2,2))
ggplot(X2013_2027, aes(x= Direction, fill = Direction)) + geom_bar() + theme_classic() 
ggplot(X2017_2022, aes(x= Direction, fill = Direction)) + geom_bar() + theme_classic() 



#Stationary tests

#Installing the Required Packages
install.packages("tidyverse")
install.packages("urca")
install.packages("forecast")
install.packages("tseries")
install.packages("TSstudio")
help(TSstudio)

#Calling the Required Packages
library(tidyverse)
library(forecast)
library(tseries)
library(urca)
library(TSstudio)


inf <- ts(Percentages$`Price_change to the next day`, start = c(2013,1,1, frequency = 365))

autoplot(inf) + ggtitle("Bitcoin price change January 2013 to August 2022") + labs(x = "Time", y = "Bitcoin Price change (t+1")

linf <- log(inf)

dinf <- diff(inf)

ldinf <- diff(log(inf), lag = 1)

#Decomposition
ts_decompose(inf, type = "additive", showline = TRUE)


#Dickey FUller <0.01 = Stationary
adf.test(inf, k=1)
adf.test(linf, k =1)
adf.test(ldinf, k = 1)

#Using the Phillips Perron Test <0.01 = Stationary
pp.test(inf)
pp.test(linf)
pp.test(ldinf)


#Correlation matrix
library(Hmisc)
library(sjPlot)
library(dplyr)

tab_corr(Percentages_data,
         na.deletion ="pairwise",
         corr.method = "pearson",
         triangle = "lower",
         fade.ns = FALSE,
         file = "corr_matrix_V2.doc"
         )


#Linear regressions
library(MASS)
library(dplyr)
library(ggplot2)


Percentages_data <- Percentages %>% select(-Direction, -DATE)

fix(Percentages_data)
names(Percentages_data)

#Regression
whole_model <- lm(BTC_price_t1 ~. -DJIA, data = Percentages_data)

summary(whole_model)

#plotting variables 
ggplot(Percentages_data, aes(x = Google_interest, y = BTC_price_t1)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "Relationship between BTC_price_t1 and Google_interest") + 
  theme(plot.title = element_text(face = "bold", hjust = 0.5))

#VIF
vif(whole_model)

#Residual plot
plot_1 <- plot(predict (whole_model), residuals (whole_model))
plot_1 + title("Residual plot")


